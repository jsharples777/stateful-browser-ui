import { CollectionViewListener } from "../view/interface/CollectionViewListener";
import { AbstractStatefulCollectionView } from "../view/implementation/AbstractStatefulCollectionView";
import { View } from "../view/interface/View";
import { CollectionView } from "../view/interface/CollectionView";
import { Modifier } from "../ConfigurationTypes";
import { ChatEventListener, ChatLog, Invitation, Message } from "browser-state-management";
export declare class ChatLogsView extends AbstractStatefulCollectionView implements ChatEventListener, CollectionViewListener {
    private static _instance;
    private static DOMConfig;
    protected selectedChatLog: ChatLog | null;
    private constructor();
    static getInstance(): ChatLogsView;
    compareItemsForEquality(item1: any, item2: any): boolean;
    handleNewInviteReceived(invite: Invitation): boolean;
    handleChatLogUpdated(log: ChatLog): void;
    onDocumentLoaded(): void;
    getIdForItemInNamedCollection(name: string, item: any): any;
    renderDisplayForItemInNamedCollection(containerEl: HTMLElement, name: string, item: any): void;
    getModifierForItemInNamedCollection(name: string, item: any): Modifier.active | Modifier.inactive;
    getSecondaryModifierForItemInNamedCollection(name: string, item: any): Modifier.active | Modifier.inactive;
    selectChatRoom(roomName: string): void;
    handleChatLogsUpdated(): void;
    handleChatStarted(log: ChatLog): void;
    getBadgeValueForItemInNamedCollection(name: string, item: any): number;
    canDeleteItem(view: View, selectedItem: any): boolean;
    itemDeleted(view: View, selectedItem: any): void;
    hideRequested(view: View): void;
    hide(): void;
    documentLoaded(view: View): void;
    itemAction(view: View, actionName: string, selectedItem: any): void;
    itemDragStarted(view: View, selectedItem: any): void;
    itemDropped(view: View, droppedItem: any): void;
    itemSelected(view: View, selectedItem: any): void;
    itemDeselected(view: View, selectedItem: any): void;
    showRequested(view: View): void;
    handleOfflineMessagesReceived(messages: Message[]): void;
    handleInvitationDeclined(room: string, username: string): void;
    canSelectItem(view: CollectionView, selectedItem: any): boolean;
    private updateStateManager;
}
